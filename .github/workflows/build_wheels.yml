name: Build python wheels

on:
  push:
    tags: "v*"
  pull_request:
  workflow_dispatch:
    inputs:
      upload_to_pypi:
        description: 'Upload to PyPI after building'
        required: false
        type: boolean
        default: false

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-py${{ matrix.pyver }}-${{ matrix.arch || 'default' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds - single arch
          - os: ubuntu-latest
            pyver: cp310
            arch: x86_64
          - os: ubuntu-latest
            pyver: cp311
            arch: x86_64
          - os: ubuntu-latest
            pyver: cp312
            arch: x86_64
          - os: ubuntu-latest
            pyver: cp313
            arch: x86_64
          # macOS ARM64 builds
          - os: macos-latest
            pyver: cp310
            arch: arm64
          - os: macos-latest
            pyver: cp311
            arch: arm64
          - os: macos-latest
            pyver: cp312
            arch: arm64
          - os: macos-latest
            pyver: cp313
            arch: arm64
          # macOS Universal2 builds
          - os: macos-latest
            pyver: cp310
            arch: universal2
          - os: macos-latest
            pyver: cp311
            arch: universal2
          - os: macos-latest
            pyver: cp312
            arch: universal2
          - os: macos-latest
            pyver: cp313
            arch: universal2

    steps:
      - name: Checkout repos
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: ${{matrix.pyver}}-*
          CIBW_ARCHS: ${{matrix.arch}}
          CIBW_BUILD_FRONTEND: "build[uv]"
          CIBW_TEST_SKIP: ${{matrix.pyver}}-*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: occpy-${{ matrix.os }}-${{ matrix.pyver }}-${{ matrix.arch }}

  build_pyodide_wheel:
    name: Build wheel for pyodide
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
      - uses: pypa/cibuildwheel@v3.1.4
        env:
           CIBW_PLATFORM: pyodide
           CIBW_ARCHS: wasm32
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wasm-occpy-pyodide

  upload_all:
    runs-on: ubuntu-latest
    needs: [build_wheels, build_pyodide_wheel]
    environment:
      name: pypi
      url: https://pypi.org/p/occpy/
    permissions:
      id-token: write
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || (github.event_name == 'workflow_dispatch' && inputs.upload_to_pypi)
    steps:
    - uses: actions/download-artifact@v5
      with:
        path: dist
        pattern: '*occpy*'
        merge-multiple: true

    - name: List downloaded wheels
      run: |
        echo "Downloaded wheels:"
        ls -la dist/
        echo "Checking wheel integrity:"
        python -m zipfile -t dist/*.whl || true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
